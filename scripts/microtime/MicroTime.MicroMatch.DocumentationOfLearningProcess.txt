	I made the Quizlet Match Mode bot, and I beat the supposed minimum of 0.5s. Apparently the game doesn't actually wait for the animations. You can run my script (which works as a bookmarklet) while the screen is still fading in with no delay, and get a perfect score of as little as 0.01s (in theory, if your computer is fast enough and it happens to find all the tiles on the first check). It also is very easy to detect, as it just runs for loops and does not have any delay, so odds are it will not ever be able to get a score on the leaderboard without making it use intervals and timeouts. I learned a lot from this project suprisingly, and I will make a list now:

	First of all, I learned that Quizlet not only stores term-definition pairs in memory, but a few variables that involve your record, written as 19 for a score of 1.9s, for example. I tried setting that to 0.1s on load, and it changed the record, but would automatically fix itself. This got me searching for the timer in memory to see if I could freeze it, but it actually is checked on Quizlet's server, so that quickly got stopped. Apparently Quizlet made the game generate 5 Unique User ID's, and they were checked with the start time on the server. They really could just make a counter show how many people are playing match at any given moment, so the reasons they don't could be that they have a low number for there preference, or they just decided that nobody would actually care enough to use it. That was that.

	Secondly, I found out (as mentioned earlier) that the 0.5s limit is actually server-side, and they do have (fairly crappy) bot detection. If you get 0.4s by yourself (with a hacked quizlet to respond to touch/clicking earlier), it would be denied to the server, and continued attempts will possibly get you banned. I used a second account for most of the attempts until I confirmed it worked. 
	
	Now, the way my bot works is for looping through all the DIV's on the page (not the most efficient) and checking if the innerHTML (as that opposed to innerText makes sure it is only found once, not container's or anything) is equal to the current word (loops through found terms), then does the same for the current word's definition. It then sends a pointerdown event to each tile, and wins the game instantly.
	
	If you look through the code (the bookmarklet is the original, just copy pasted and indented for a tampermonkey script for those of you with that) you will see it is not the most efficient, but get's *extremely consistantly* less than one second (I am yet to see anything more than eight tenths of a second on a retry, or a half on a "Start Game"). If you want you can even change the setTimout to run after 0 milliseconds, and get a score of zero, but it won't be worth anything so I wouldn't waste my time
	
	If you have any questions, feel free to either use github issues (https://github.com/jdevteam2018/Quizlet/issues) or write me an email (jDevTeam2018.John@gmail.com, please make the subject something obvious like "MicroTime MicroScatter" so I can reply faster). I will get back to you as soon as I get the notification and have time to do so.